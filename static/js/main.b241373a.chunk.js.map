{"version":3,"sources":["components/common/MovieCard.js","components/layouts/listOfMovies.js","components/welcome/welcome.js","components/movie/critics.js","components/movie/MovieDetail.js","components/layouts/navbar/Navbar.js","components/favorites/favorites.js","components/layouts/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","movie","overviewSizeAccordingToWindow","window","innerWidth","className","overview","substring","length","onClick","history","push","id","favorites","filter","fav","isFavorite","deleteFavorite","createFavorite","style","background","poster_path","title","ListOfMovies","loading","useState","setFavorites","useEffect","getFavorites","JSON","parse","localStorage","getItem","setItem","stringify","src","showFavorites","movies","map","key","Welcome","theTop20Movies","setTheTop20Movies","setLoading","currentPage","setcurrentPage","getTheTop20Movies","axios","method","url","then","response","data","results","catch","e","width","backgroundColor","margin","height","fontSize","MovieCritics","params","theMovieCritics","setTheMovieCritics","showCriticsTextLength","setshowCriticsTextLength","critic","author","content","MovieDetail","match","theMovie","setTheMovie","backdrop_path","tagline","production_countries","country","name","spoken_languages","language","release_date","target","href","homepage","genres","genre","production_companies","company","Favorites","NotFound","to","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b241373a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst MovieCard = props => {\r\n  const movie = props.movie;\r\n\r\n  function isFavorite(movie) {\r\n    return props.favorites.filter(fav => fav.id === movie.id).length;\r\n  }\r\n  function overviewSizeAccordingToWindow() {\r\n    return window.innerWidth <= 1170 ? 100 : 230;\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"text\">\r\n        <p>\r\n          {movie.overview\r\n            ? `${movie.overview.substring(0, overviewSizeAccordingToWindow())}${\r\n                movie.overview.length > overviewSizeAccordingToWindow()\r\n                  ? '...'\r\n                  : ''\r\n              }`\r\n            : ''}\r\n        </p>\r\n        <div className=\"options\">\r\n          <button onClick={() => props.history.push(`/movie/${movie.id}`)}>\r\n            Ver m√°s\r\n          </button>\r\n          <div className=\"like\">\r\n            {isFavorite(movie) ? (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => props.deleteFavorite(movie)}\r\n              >\r\n                favorite\r\n              </i>\r\n            ) : (\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => props.createFavorite(movie)}\r\n              >\r\n                favorite_border\r\n              </i>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"image\"\r\n        style={{\r\n          background: `url(https://image.tmdb.org/t/p/original/${movie.poster_path})`\r\n        }}\r\n      ></div>\r\n      <p\r\n        className=\"movietitle\"\r\n        onClick={() => props.history.push(`/movie/${movie.id}`)}\r\n      >\r\n        {movie.title}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieCard);\r\n","import React, { useEffect, useState } from 'react';\r\nimport MovieCard from '../common/MovieCard';\r\n\r\nconst ListOfMovies = props => {\r\n  const { loading, title } = props;\r\n\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let getFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    setFavorites(getFavorites);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  function sourceOfMovies() {\r\n    return props.showFavorites ? favorites : props.movies;\r\n  }\r\n\r\n  function createFavorite(movie) {\r\n    setFavorites([...favorites, movie]);\r\n  }\r\n\r\n  function deleteFavorite(movie) {\r\n    setFavorites(favorites.filter(fav => fav.id !== movie.id));\r\n  }\r\n\r\n  return (\r\n    <div className=\"welcome\">\r\n      <div className=\"banner\">\r\n        <img src=\"https://peliculas-favoritas.s3.amazonaws.com/popcorn.png\" />\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <div className=\"main\">\r\n        {loading ? (\r\n          <p>Cargando</p>\r\n        ) : (\r\n          <div className=\"list\">\r\n            {sourceOfMovies().map(movie => (\r\n              <MovieCard\r\n                movie={movie}\r\n                key={movie.id}\r\n                favorites={favorites}\r\n                createFavorite={createFavorite}\r\n                deleteFavorite={deleteFavorite}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfMovies;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from '../common/MovieCard';\r\nimport ListOfMovies from '../layouts/listOfMovies';\r\n\r\nconst Welcome = props => {\r\n  const [theTop20Movies, setTheTop20Movies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    getTheTop20Movies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getTheTop20Movies();\r\n  }, [currentPage]);\r\n\r\n  function getTheTop20Movies() {\r\n    axios({\r\n      method: 'GET',\r\n      url: `https://api.themoviedb.org/3/movie/popular?api_key=ee41860b27e6bb1be4f182a4519564aa&language=en-US&page=${currentPage}`\r\n    })\r\n      .then(response => {\r\n        setLoading(false);\r\n        setTheTop20Movies([...theTop20Movies, ...response.data.results]);\r\n      })\r\n      .catch(e => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ListOfMovies\r\n        movies={theTop20Movies}\r\n        loading={loading}\r\n        title={'Top Movies'}\r\n      />\r\n      <button\r\n        onClick={() => setcurrentPage(currentPage + 1)}\r\n        style={{\r\n          width: '100%',\r\n          backgroundColor: 'gray',\r\n          margin: '0 0 10px 0',\r\n          height: '80px',\r\n          fontSize: '50px'\r\n        }}\r\n      >\r\n        Get More\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MovieCritics = props => {\r\n  const { params } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [theMovieCritics, setTheMovieCritics] = useState([]);\r\n  const [showCriticsTextLength, setshowCriticsTextLength] = useState(200);\r\n\r\n  useEffect(() => {\r\n    getMovieCritics();\r\n  }, []);\r\n\r\n  function getMovieCritics() {\r\n    axios({\r\n      method: 'GET',\r\n      url: `https://api.themoviedb.org/3/movie/${params.id}/reviews?api_key=ee41860b27e6bb1be4f182a4519564aa&language=en-US&page=1`\r\n    })\r\n      .then(response => {\r\n        setLoading(false);\r\n        setTheMovieCritics(response.data.results);\r\n      })\r\n      .catch(e => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"critics\">\r\n      {loading ? (\r\n        <p>Cargando</p>\r\n      ) : (\r\n        <>\r\n          <h3>Movie Critics</h3>\r\n          {theMovieCritics.map(critic => (\r\n            <div className=\"critic\">\r\n              <p>\r\n                <strong>{critic.author}:</strong>$\r\n                {critic.content.substring(0, showCriticsTextLength)}\r\n                {critic.content.length > showCriticsTextLength ? (\r\n                  <p\r\n                    className=\"showmore\"\r\n                    onClick={() => setshowCriticsTextLength(60000)}\r\n                  >\r\n                    ... Show All Texts\r\n                  </p>\r\n                ) : null}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCritics;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MovieCritics from './critics';\r\n\r\nconst MovieDetail = props => {\r\n  const { params } = props.match;\r\n  const [loading, setLoading] = useState(true);\r\n  const [theMovie, setTheMovie] = useState({});\r\n\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, []);\r\n\r\n  function getMovie() {\r\n    axios({\r\n      method: 'GET',\r\n      url: `https://api.themoviedb.org/3/movie/${params.id}?api_key=ee41860b27e6bb1be4f182a4519564aa&language=en-US`\r\n    })\r\n      .then(response => {\r\n        setLoading(false);\r\n        setTheMovie(response.data);\r\n      })\r\n      .catch(e => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"MovieDetail\">\r\n      {loading ? (\r\n        <p>Cargando</p>\r\n      ) : (\r\n        <>\r\n          <div className=\"detail\">\r\n            <div\r\n              className=\"poster\"\r\n              style={{\r\n                background: `url(https://image.tmdb.org/t/p/original/${theMovie.poster_path})`\r\n              }}\r\n            ></div>\r\n            <div\r\n              className=\"movieBackground\"\r\n              style={{\r\n                background: `url(https://image.tmdb.org/t/p/original/${theMovie.backdrop_path})`\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"banner\">\r\n            <img src=\"https://peliculas-favoritas.s3.amazonaws.com/popcorn.png\" />\r\n            <h2>{theMovie.title}</h2>\r\n            <p></p>\r\n            <p className=\"tagline\">{theMovie.tagline}</p>\r\n          </div>\r\n          <div className=\"summary\">\r\n            <div className=\"content\">\r\n              <h3>Overview</h3>\r\n              <p className=\"overview\">{theMovie.overview}</p>\r\n              <div className=\"fact\">\r\n                <h4>Country(ies): </h4>{' '}\r\n                {theMovie.production_countries &&\r\n                  theMovie.production_countries.map(country => (\r\n                    <p>{country.name} - </p>\r\n                  ))}\r\n              </div>\r\n              <div className=\"fact\">\r\n                <h4>Spoken language(s): </h4>{' '}\r\n                {theMovie.spoken_languages &&\r\n                  theMovie.spoken_languages.map(language => (\r\n                    <p>{language.name} - </p>\r\n                  ))}\r\n              </div>\r\n              <div className=\"fact\">\r\n                <h4>Release Date: </h4> <p>{theMovie.release_date} </p>\r\n              </div>\r\n              <div className=\"fact\">\r\n                <h4>Website: </h4>\r\n                <a target=\"_blank\" href={theMovie.homepage}>\r\n                  <p>{theMovie.homepage} </p>\r\n                </a>\r\n              </div>\r\n              <div className=\"fact\">\r\n                <h4>Genres: </h4>\r\n                {theMovie.genres &&\r\n                  theMovie.genres.map(genre => <p>{genre.name} - </p>)}\r\n              </div>\r\n              <div className=\"fact\">\r\n                <h4>Company(ies): </h4>\r\n                {theMovie.production_companies &&\r\n                  theMovie.production_companies.map(company => (\r\n                    <p>{company.name} - </p>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n            <MovieCritics params={params} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1>Welcome to the Popular Movies List</h1>\r\n      <div className=\"buttons\">\r\n        <button onClick={() => props.history.push(`/`)}>Top Movies</button>\r\n        <button onClick={() => props.history.push(`/favorites`)}>\r\n          My favorites\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { useState, useEffect } from 'react';\r\nimport ListOfMovies from '../layouts/listOfMovies';\r\n\r\nconst Favorites = props => {\r\n  return <ListOfMovies showFavorites title={'My Favorites Movies'} />;\r\n};\r\n\r\nexport default Favorites;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"notfound\">\r\n      <p>Not Found</p>\r\n      <Redirect to=\"/\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Welcome from './components/welcome/welcome';\nimport MovieDetail from './components/movie/MovieDetail';\nimport Navbar from './components/layouts/navbar/Navbar';\nimport Favorites from './components/favorites/favorites';\nimport NotFound from './components/layouts/NotFound';\nimport './sass/App.scss';\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Welcome} />\n        <Route path=\"/movie/:id\" component={MovieDetail} />\n        <Route path=\"/favorites\" component={Favorites} />\n        <Route component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}